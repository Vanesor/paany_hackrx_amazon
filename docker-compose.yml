version: "3.8"

services:
  rag-system:
    build: .
    container_name: rag-system
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-your-api-key-here}
      - API_TOKEN=${API_TOKEN:-your-secure-token-here}
      - PYTHONPATH=/app
      - TRANSFORMERS_CACHE=/app/model_cache
      - HF_HOME=/app/model_cache
      - TOKENIZERS_PARALLELISM=false
      - OMP_NUM_THREADS=2
      - MKL_NUM_THREADS=2
      - NUMEXPR_NUM_THREADS=2
    volumes:
      - model-cache:/app/model_cache
    networks:
      - rag-network
    restart: unless-stopped
    # Resource limits optimized for 1.3GB RAM
    deploy:
      resources:
        limits:
          memory: 1200M  # 1.2GB limit for 1.3GB available
          cpus: '2.0'    # Limited CPU for stability
        reservations:
          memory: 800M   # Reserve 800MB
          cpus: '1.0'    # Reserve 1 CPU
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s  # More time for model loading

networks:
  rag-network:
    driver: bridge

volumes:
  model-cache:
    driver: local
          memory: 1.5G
          cpus: '1.8'
        reservations:
          memory: 1G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  redis-data:

networks:
  rag-network:
    driver: bridge
